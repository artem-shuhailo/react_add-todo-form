{"version":3,"sources":["api/users.ts","services/user.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/NewTodo/NewTodo.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","UserInfo","className","href","TodoInfo","todo","completed","title","cn","TodoList","todos","map","getNewTodoId","Math","max","NewTodo","onSubmit","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","action","method","event","preventDefault","trim","htmlFor","type","placeholder","value","onChange","target","required","disabled","defaultTodos","App","setTodos","data","newTodos","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc977dfe.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id, completed, title, user,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        key={todo.id}\n        todo={todo}\n      />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\n\nimport usersFromServer from '../../api/users';\nimport { getUserById } from '../../services/user';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  onSubmit: (post: Todo) => void;\n  todos: Todo[];\n};\n\nexport function getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  return maxId + 1;\n}\n\nexport const NewTodo: React.FC<Props> = ({ onSubmit, todos }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleTitleUserId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title.trim());\n    setHasUserIdError(!userId);\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: getNewTodoId(todos),\n      title,\n      userId,\n      completed: false,\n      user: getUserById(userId),\n    });\n\n    resetForm();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <label htmlFor=\"titleInput\">\n        <div className=\"field\">\n          Title:&nbsp;\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n      </label>\n\n      <div className=\"field\">\n        <label htmlFor=\"userSelect\">\n          User:&nbsp;\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            required\n            onChange={handleTitleUserId}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport { getUserById } from './services/user';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { NewTodo, getNewTodoId } from './components/NewTodo/NewTodo';\n\nexport const defaultTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>(defaultTodos);\n\n  const addNewTodo = ({ id, ...data }: Todo) => {\n    const newTodos = {\n      ...data,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodos]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <NewTodo onSubmit={addNewTodo} todos={[]} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}